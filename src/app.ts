import express, { Response, Request, NextFunction } from 'express';
import mongoose from 'mongoose';
import path from 'path';
import { ServerError } from './errors';
import { usersRouter, cardsRouter } from './routes';
import { AuthContext } from './types';

const { PORT = 3000 } = process.env;

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

mongoose.connect('mongodb://localhost:27017/mestodb').then(() => {
  console.info('๐ ะะพะดะบะปััะตะฝะธะต ะบ ะะ ะฟัะพัะปะพ ััะฟะตัะฝะพ ๐');
}, () => {
  console.error('๐ฉ ะัะธ ะฟะพะดะบะปััะตะฝะธะธ ะบ ะะ ััะพ-ัะพ ะฟะพัะปะพ ะฝะต ัะฐะบ ๐ฉ');
});

// ะฒัะตะผะตะฝะฝะพะต ัะตัะตะฝะธะต ะฐะฒัะพัะธะทะฐัะธะธ
app.use((req: Request, res: Response<unknown, AuthContext>, next: NextFunction) => {
  res.locals.user = {
    _id: '662400bb4c6cb77df106e069', // ะฒััะฐะฒััะต ััะดะฐ _id ัะพะทะดะฐะฝะฝะพะณะพ ะฒ ะฟัะตะดัะดััะตะผ ะฟัะฝะบัะต ะฟะพะปัะทะพะฒะฐัะตะปั
  };

  next();
});

app.use('/users', usersRouter);
app.use('/cards', cardsRouter);

app.use(express.static(path.join(__dirname, 'public')));

app.use((err: ServerError, req: unknown, res: Response) => {
  // ะตัะปะธ ั ะพัะธะฑะบะธ ะฝะตั ััะฐัััะฐ, ะฒัััะฐะฒะปัะตะผ 500
  const { statusCode = 500, message } = err;

  res
    .status(statusCode)
    .send({
      message: statusCode === 500
        ? 'ะะฐ ัะตัะฒะตัะต ะฟัะพะธะทะพัะปะฐ ะพัะธะฑะบะฐ'
        : message,
    });
});

app.listen(PORT, () => {
  console.info('๐ ะกะตัะฒะตั ััะฟะตัะฝะพ ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั: ', PORT, ' ๐');
});
