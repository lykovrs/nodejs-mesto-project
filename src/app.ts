import express, { Response, Request, NextFunction } from 'express';
import mongoose from 'mongoose';
import path from 'path';
import 'dotenv/config';

import { ServerError } from './errors';

import { AuthContext } from './types';
import router from './routes';

const { PORT = 3000, MONGO_URL = 'mongodb://127.0.0.1:27017/mestodb' } = process.env;

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
app.use((req: Request, res: Response<unknown, AuthContext>, next: NextFunction) => {
  res.locals.user = {
    _id: '662400bb4c6cb77df106e063', // –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ _id —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø—É–Ω–∫—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  };

  next();
});

app.use('/', router);

app.use(express.static(path.join(__dirname, 'public')));

app.use((err: ServerError, req: unknown, res: Response) => {
  // –µ—Å–ª–∏ —É –æ—à–∏–±–∫–∏ –Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞, –≤—ã—Å—Ç–∞–≤–ª—è–µ–º 500
  const { statusCode = 500, message } = err;

  res
    .status(statusCode)
    .send({
      message: statusCode === 500
        ? '–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'
        : message,
    });
});

app.get('*', (req, res) => res.send('Page Not found 404'));

const connect = async () => {
  try {
    await mongoose.connect(MONGO_URL);
    console.info('üçÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ üçÄ');
    await app.listen(PORT, () => {
      console.info('üèÜ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: ', PORT, ' üèÜ');
    });
  } catch (e) {
    console.error('üí© –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... üí©', e);
  }
};

connect();
