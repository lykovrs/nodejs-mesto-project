import express, { Response } from 'express';
import mongoose from 'mongoose';
import path from 'path';
import ServerError from './errors/not-found-error';
import usersRouter from './routes/users';

// ะกะปััะฐะตะผ 3000 ะฟะพัั
const { PORT = 3000 } = process.env;

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// ะฟะพะดะบะปััะฐะตะผัั ะบ ัะตัะฒะตัั MongoiDB
mongoose.connect('mongodb://localhost:27017/mestodb').then(() => {
  console.info('๐ ะะพะดะบะปััะตะฝะธะต ะบ ะะ ะฟัะพัะปะพ ััะฟะตัะฝะพ ๐');
}, () => {
  console.error('๐ฉ ะัะธ ะฟะพะดะบะปััะตะฝะธะธ ะบ ะะ ััะพ-ัะพ ะฟะพัะปะพ ะฝะต ัะฐะบ ๐ฉ');
});

app.use('/users', usersRouter);

app.use(express.static(path.join(__dirname, 'public')));

app.use((err: ServerError, req: unknown, res: Response) => {
  // ะตัะปะธ ั ะพัะธะฑะบะธ ะฝะตั ััะฐัััะฐ, ะฒัััะฐะฒะปัะตะผ 500
  const { statusCode = 500, message } = err;

  res
    .status(statusCode)
    .send({
      message: statusCode === 500
        ? 'ะะฐ ัะตัะฒะตัะต ะฟัะพะธะทะพัะปะฐ ะพัะธะฑะบะฐ'
        : message,
    });
});

app.listen(PORT, () => {
  console.info('๐ะกะตัะฒะตั ััะฟะตัะฝะพ ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั', PORT, '๐');
  // ะัะปะธ ะฒัั ัะฐะฑะพัะฐะตั, ะบะพะฝัะพะปั ะฟะพะบะฐะถะตั, ะบะฐะบะพะน ะฟะพัั ะฟัะธะปะพะถะตะฝะธะต ัะปััะฐะตั
});
