import express from 'express';
import mongoose from 'mongoose';
import cookieParser from 'cookie-parser';
import cors from 'cors';
import 'dotenv/config';

import router from './routes';
import {
  errorMiddleware,
  errorLoggerMiddleware,
  requestLoggerMiddleware,
} from './middlewares';

const { PORT = 3000, MONGO_URL = 'mongodb://127.0.0.1:27017/mestodb' } = process.env;

const app = express();
app.use(cors());
// ะฟะฐััะตั ะดะปั ัะฐะฑะพัั ั ะบัะบะฐะผะธ
app.use(cookieParser());
// ะฟะฐััะธะผ ะฒัะพะดััะธะน json
app.use(express.json());
// ะฟะฐััะธะผ ะดะฐะฝะฝัะต ะธะท ััะปะฐ
app.use(express.urlencoded({ extended: true }));
// ะปะพะณะณะธััะตะผ ะทะฐะฟัะพัั
app.use(requestLoggerMiddleware);
// ัะพัะบะฐ ะฒัะพะดะฐ ะฒ ัะพััะธะฝะณ
app.use('/', router);

// ะปะพะณะณะธััะตะผ ะพัะธะฑะบะธ
app.use(errorLoggerMiddleware);
// ััั ะฟะตัะตัะฒะฐััะฒะฐะตะผ ะพัะธะฑะบะธ, ะบะพัะพััะต ะฝะธะณะดะต ะฝะต ะพะฑัะฐะฑะพัะฐะปะธัั
app.use(errorMiddleware);

const connect = async () => {
  try {
    await mongoose.connect(MONGO_URL);
    console.info('๐ ะะพะดะบะปััะตะฝะธะต ะบ ะะ ะฟัะพัะปะพ ััะฟะตัะฝะพ ๐');
    await app.listen(PORT, () => {
      console.info('๐ ะกะตัะฒะตั ััะฟะตัะฝะพ ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั: ', PORT, ' ๐');
    });
  } catch (e) {
    console.error('๐ฉ ะัะธ ะธะฝะธัะธะฐะปะธะทะฐัะธะธ ะฟัะธะปะพะถะตะฝะธั ััะพ-ัะพ ะฟะพัะปะพ ะฝะต ัะฐะบ... ๐ฉ', e);
  }
};

connect();
