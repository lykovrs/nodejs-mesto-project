import express, { Response, Request, NextFunction } from 'express';
import mongoose from 'mongoose';
import path from 'path';
import 'dotenv/config';

import { NotFoundError, ServerError } from './errors';

import { AuthContext } from './types';
import router from './routes';

const { PORT = 3000, MONGO_URL = 'mongodb://127.0.0.1:27017/mestodb' } = process.env;

const app = express();

// –ø–∞—Ä—Å–∏–º –≤—Ö–æ–¥—è—â–∏–π json
app.use(express.json());
// –ø–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —É—Ä–ª–∞
app.use(express.urlencoded({ extended: true }));

// –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
app.use((req: Request, res: Response<unknown, AuthContext>, next: NextFunction) => {
  res.locals.user = {
    _id: '662400bb4c6cb77df106e063', // –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ _id —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø—É–Ω–∫—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  };

  next();
});

// —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ä–æ—É—Ç–∏–Ω–≥
app.use('/', router);

// –æ—Ç–¥–∞–µ–º —Å—Ç–∞—Ç–∏–∫—É –∏–∑ –ø–∞–ø–∫–∏ public
app.use(express.static(path.join(__dirname, 'public')));

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ—É—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–≥–¥–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤—ã—à–µ
router.use((req, res, next) => {
  next(new NotFoundError('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'));
});

// —Ç—É—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–≥–¥–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å
app.use((err: ServerError, req: unknown, res: Response) => {
  // –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –æ–ø–æ–∑–Ω–∞–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –ø—è—Ç–∏—Å–æ—Ç—É—é
  if (!err.statusCode) {
    const customError = new ServerError();
    res
      .status(customError.statusCode)
      .send(customError.message);
  } else {
    res
      .status(err.statusCode)
      .send(err.message);
  }
});

const connect = async () => {
  try {
    await mongoose.connect(MONGO_URL);
    console.info('üçÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ üçÄ');
    await app.listen(PORT, () => {
      console.info('üèÜ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: ', PORT, ' üèÜ');
    });
  } catch (e) {
    console.error('üí© –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... üí©', e);
  }
};

connect();
